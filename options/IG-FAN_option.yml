# general settings
name: IG_FAN_option.yml
model_type: DeflareModel
scale: 1
num_gpu: 2  # set num_gpu: 0 for cpu mode
manual_seed: 3407

# dataset and data loader settings
datasets:
  train:
    name: Flare7Kpp
    type: Flare7kpp_Pair_Loader
    image_path: ~/Flickr24K
    scattering_dict:
      Flare7k_scattering: ~/Flare7K/Scattering_Flare/Compound_Flare
      Real_scattering1: ~/Flare7Kpp/Flare-R/Compound_Flare
    reflective_dict: # you can also comment this part to get more robust result
      Flare7k_reflective: ~
      Real_reflective1: ~ 
    light_dict:
      Flare7k_light: ~/Flare7Kpp/Flare7K/Scattering_Flare/Light_Source
    transform_base:
      img_size: 512
    transform_flare:
      scale_min: 0.8
      scale_max: 1.5
      translate: 300
      shear: 20
    mask_type: ~

    

    
    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 2
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: flare_test
    type: Image_Pair_Loader
    dataroot_gt: ~/Flare7Kpp/test_data/real/gt
    dataroot_lq: ~/Flare7Kpp/test_data/real/input
    gt_size: 512

# network structures
network_g:
  type: Uformer
  img_size: 512
  img_ch: 3
  output_ch: 6
  multi_stage: 1


path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [100000,200000]
    gamma: 0.5

  out_deflare: True
  ema_decay: 0.9
  total_iter: 600000
  warmup_iter: -1  # no warm up

  # losses
  l1_opt:
    type: L_Abs_pure
    loss_weight: 0.5

  perceptual:
    type: L_percepture
    loss_weight: 0.5

# validation settings
val:
  val_freq: !!float 2500
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 2500
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

pretrain_decomnet_low: ~/pretrained_model/decom/low/decom_model.pthep1700
pretrain_decomnet_high: ~/pretrained_models/init_high.pth
